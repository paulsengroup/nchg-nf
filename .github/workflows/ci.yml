# Copyright (C) 2022 Roberto Rossini (roberros@uio.no)
# SPDX-License-Identifier: MIT

name: CI

on:
  push:
    branches: [main, devel]
    paths:
      - ".github/workflows/ci.yml"
      - ".dockerignore"
      - "main.nf"
      - "nextflow.config"
      - "bin/*.py"
      - "config/ci.config"
      - "subworkflows/**"
      - "test/samplesheets/*.tsv"

  pull_request:
    paths:
      - ".github/workflows/ci.yml"
      - ".dockerignore"
      - "main.nf"
      - "nextflow.config"
      - "bin/*.py"
      - "config/ci.config"
      - "subworkflows/**"
      - "test/samplesheets/*.tsv"

  release:
    types: [published]

# https://stackoverflow.com/a/72408109
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  TEST_DATASET_URL: "https://zenodo.org/records/15546722/files/nchg_test_data.tar.zst?download=1"
  TEST_DATASET_SHA256: "5337b8c117492b3f3bec68aef8406e89b81ed6741ebaf42b41bb43d5e161b3b6"
  TEST_MATRIX: "ENCFF447ERX.minified.mcool"
  TEST_DOMAINS_BED: "ENCFF447ERX.1000000.compartments.bed"
  TEST_DOMAINS_BEDPE: "ENCFF447ERX.1000000.domains.bedpe"
  NXF_ANSI_LOG: false

jobs:
  preproc-test-dataset:
    name: Preprocess test dataset
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.generate-cache-key.outputs.key }}

    steps:
      - name: Generate cache key
        id: generate-cache-key
        run: |
          key="test-dataset-$TEST_DATASET_SHA256"
          echo "key=$key" >> $GITHUB_OUTPUT

      - name: Lookup cached test datasets
        id: cache-dataset
        uses: actions/cache/restore@v4
        with:
          key: ${{ steps.generate-cache-key.outputs.key }}
          path: test/data/
          lookup-only: true

      - name: Download test dataset
        if: steps.cache-dataset.outputs.cache-hit != 'true'
        run: |
          curl -L "$TEST_DATASET_URL" -o dataset.tar.zst
          curl -LO 'https://hgdownload.cse.ucsc.edu/goldenPath/hg38/database/cytoBand.txt.gz'
          curl -LO 'https://hgdownload.cse.ucsc.edu/goldenPath/mm10/database/gap.txt.gz'

      - name: Checksum test dataset
        if: steps.cache-dataset.outputs.cache-hit != 'true'
        run: |
          echo "$TEST_DATASET_SHA256  dataset.tar.zst" > checksum.sha256
          shasum -c checksum.sha256

      - name: Remove unused files
        if: steps.cache-dataset.outputs.cache-hit != 'true'
        run: |
          tar -xf dataset.tar.zst
          mkdir staging

          for name in "$TEST_MATRIX" "$TEST_DOMAINS_BED" "$TEST_DOMAINS_BEDPE"; do
            cp -L "test/data/$name" "staging/$name"
          done

          rm -rf test/

          mkdir -p test/data
          mv staging/* cytoBand.txt.gz gap.txt.gz test/data/

          ls -lah test/data/

      - name: Cache test datasets
        if: steps.cache-dataset.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.generate-cache-key.outputs.key }}
          path: test/data/

  test-workflow:
    name: Test workflow
    runs-on: ubuntu-latest
    needs: [preproc-test-dataset]

    permissions:
      contents: read
      packages: read

    strategy:
      matrix:
        NXF_VER: ["22.10.8", "latest-stable"]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Cache test datasets
        uses: actions/cache@v4
        with:
          key: ${{ needs.preproc-test-dataset.outputs.cache-key }}
          path: test/data/
          fail-on-cache-miss: true

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: ${{ matrix.NXF_VER }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Test workflow (wo/ samplesheet)
        run: |
          printf '%s\t%d\t%d' chr21 0 5000000 > mask.bed

          nextflow run -c config/ci.config \
                       --sample="test" \
                       --hic_file="test/data/$TEST_MATRIX" \
                       --mask=mask.bed \
                       --resolution=100000 \
                       --outdir=test/out/wo_samplesheet \
                       --max_cpus=$(nproc) \
                       .

          ls -lah test/out/wo_samplesheet

      - name: Test workflow (w/ samplesheet; single sample)
        run: |
          nextflow run -c config/ci.config \
                       --sample_sheet=test/samplesheets/single_sample.tsv \
                       --outdir=test/out/single_sample \
                       --max_cpus=$(nproc) \
                       .

          ls -lah test/out/single_sample

      - name: Test workflow (w/ samplesheet; multiple_samples)
        run: |
          nextflow run -c config/ci.config \
                       --sample_sheet=test/samplesheets/multiple_samples.tsv \
                       --outdir=test/out/multiple_samples \
                       --max_cpus=$(nproc) \
                       .

          ls -lah test/out/multiple_samples

      - name: Test workflow (w/ samplesheet; 1D domains)
        run: |
          nextflow run -c config/ci.config \
                       --sample_sheet=test/samplesheets/1d_domains.tsv \
                       --outdir=test/out/1d_domains \
                       --max_cpus=$(nproc) \
                       .

          ls -lah test/out/1d_domains

      - name: Test workflow (w/ samplesheet; 2D domains)
        run: |
          nextflow run -c config/ci.config \
                       --sample_sheet=test/samplesheets/2d_domains.tsv \
                       --outdir=test/out/2d_domains \
                       --max_cpus=$(nproc) \
                       .

          ls -lah test/out/2d_domains
